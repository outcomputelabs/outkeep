# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.x'

- task: DotNetCoreCLI@2
  displayName: "Install Report Generator Tool"
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install -g dotnet-reportgenerator-globaltool'

- task: DotNetCoreCLI@2
  displayName: "Install Sonar Scanner Tool"
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install -g dotnet-sonarscanner'

- task: DotNetCoreCLI@2
  displayName: "Restore"
  inputs:
    command: 'restore'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: "Begin Sonar Scanner"
  inputs:
    command: 'custom'
    custom: 'sonarscanner'
    arguments: 'begin /k:"$(SonarQubeProjectKey)" /o:"$(SonarQubeOrganization)" /d:sonar.host.url="$(SonarQubeHostUrl)" /d:sonar.login="$(SonarQubeToken)" /d:sonar.flex.cobertura.reportPaths="../**/coverage.cobertura.xml"'

- task: DotNetCoreCLI@2
  displayName: "Build"
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "Test"
  inputs:
    command: 'test'
    arguments: '--no-build --collect:"XPlat Code Coverage" --configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "End Sonar Scanner"
  inputs:
    command: 'custom'
    custom: 'sonarscanner'
    arguments: 'end /d:sonar.login="$(SonarQubeToken)"'